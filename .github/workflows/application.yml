name: application CI-CD

on:
  push:
    branches: [ "main" ]
    paths: [ "application/**" ]
  
  pull_request:
    branches: [ "main" ]
    paths: [ "application**" ]

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:  
          python-version: '3.12'


      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.8.3 python3 -
          echo "export PATH=$HOME/.local/bin:$PATH" >> $HOME/.bashrc
          source $HOME/.bashrc

      - name: Install Dependencies with Poetry
        run: |
          cd application/app
          poetry install

      - name: Run Unit Tests
        run: |
          cd application/app
          poetry run pytest

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Builds frontend/app
      run: docker build --tag frontend/app:$(date +%s) ./application/app
  
  deploy:
    needs: build
    name: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      AWS_INSTANCE_SG_ID: ${{ secrets.EC2_CLIMATE_RISK_MAP_FRONTEND_DEV_SEC_GROUP }}
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: get runner ip address
        id: ip
        uses: haythem/public-ip@v1.3
      - name: whitelist runner ip address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_CLIMATE_RISK_MAP_FRONTEND_DEV_HOST }}
          username: ${{ secrets.EC2_CLIMATE_RISK_MAP_FRONTEND_DEV_USERNAME }}
          key: ${{ secrets.EC2_CLIMATE_RISK_MAP_FRONTEND_DEV_SSH_KEY }}
          port: 22
          script: |
            set -e
            sudo systemctl stop apache2
            cd /home/${{ secrets.EC2_CLIMATE_RISK_MAP_FRONTEND_DEV_USERNAME }}/climate-risk-map
            sudo git fetch origin
            sudo git checkout main
            sudo git pull origin main
            cd /home/${{ secrets.EC2_CLIMATE_RISK_MAP_FRONTEND_DEV_USERNAME }}/climate-risk-map/application
            sudo docker compose down
            sudo docker system prune -af
            sudo docker compose up --build -d

      - name: revoke runner ip address
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32